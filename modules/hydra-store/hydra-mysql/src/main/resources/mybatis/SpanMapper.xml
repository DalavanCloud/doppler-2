<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright jd
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jd.bdp.hydra.mysql.persistent.dao.SpanMapper">

    <resultMap id="SpanResultMap" type="SpanEntity">
        <result property="serviceId" column="service" />
        <result property="spanName" column="name" />
        <result property="id" column="spanId" />
    </resultMap>

    <insert id="addReqStatBatch" parameterType="java.util.List" >
        INSERT INTO `req_stat`  (`appId`,`appType`,`serviceId`,`method`,`host`,`logTime`,reqNum,timeoutNum,errorNum,duration) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.appId},#{item.appType},#{item.serviceId},#{item.method},#{item.host},#{item.logTime},#{item.reqNum},#{item.timeoutNum},#{item.errorNum},#{item.duration})
        </foreach>
        ON DUPLICATE KEY UPDATE
        reqNum=reqNum+values(reqNum),timeoutNum=timeoutNum+values(timeoutNum),errorNum=errorNum+values(errorNum),
        duration=CASE WHEN duration  &lt; values(duration) THEN values(duration) ELSE duration END
    </insert>

    <insert id="addReqStatServiceBatch" parameterType="java.util.List" >
        INSERT INTO `req_stat_service` (`appId`,`appType`,`serviceId`,reqNum) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.appId},#{item.appType},#{item.serviceId},#{item.reqNum})
        </foreach>
        ON DUPLICATE KEY UPDATE reqNum=reqNum+values(reqNum)
    </insert>

    <insert id="addReqStat" parameterType="ReqStatEntity" >
        INSERT INTO `req_stat`  (`appId`,`appType`,`serviceId`,`method`,`host`,`logTime`,reqNum,timeoutNum,errorNum,duration) VALUES
        (#{appId},#{appType},#{serviceId},#{method},#{host},#{logTime},#{reqNum},#{timeoutNum},#{errorNum},#{duration})  ON DUPLICATE KEY UPDATE
        reqNum=reqNum+values(reqNum),timeoutNum=timeoutNum+values(timeoutNum),errorNum=errorNum+values(errorNum),
        duration=CASE WHEN duration  &lt; values(duration) THEN values(duration) ELSE duration END
    </insert>

    <insert id="addReqStatService" parameterType="ReqStatEntity" >
        INSERT INTO `req_stat_service` (`appId`,`appType`,`serviceId`,reqNum) VALUES
        (#{appId},#{appType},#{serviceId},#{reqNum})  ON DUPLICATE KEY UPDATE reqNum=reqNum+values(reqNum)
    </insert>

    <insert id="addSpanBatch" parameterType="java.util.List" >
        INSERT INTO span (name,traceId,parentId,spanId,service)
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.spanName},#{item.traceId},#{item.parentId},#{item.id},#{item.serviceId})
        </foreach>

    </insert>

    <insert id="addSpan" parameterType="SpanEntity" >
        INSERT INTO span (name,traceId,parentId,spanId,service)
        VALUES(#{spanName},#{traceId},#{parentId},#{id},#{serviceId})
    </insert>

    <select id="findSpanByTraceId" parameterType="Long" resultMap="SpanResultMap">
        SELECT * FROM span WHERE traceId = #{traceId}
    </select>

    <delete id="deleteAllSpan">
        delete from span
    </delete>

</mapper>